#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":".NET"},{"aliases":["C#","c#"],"languageName":"C#","name":"csharp"},{"aliases":["F#","f#"],"languageName":"F#","name":"fsharp"},{"aliases":[],"languageName":"HTML","name":"html"},{"aliases":["js"],"languageName":"JavaScript","name":"javascript"},{"aliases":[],"languageName":"KQL","name":"kql"},{"aliases":[],"languageName":"Mermaid","name":"mermaid"},{"aliases":["powershell"],"languageName":"PowerShell","name":"pwsh"},{"aliases":[],"languageName":"SQL","name":"sql"},{"aliases":[],"name":"value"},{"aliases":["frontend"],"name":"vscode"},{"aliases":[],"name":"webview"}]}}

#!fsharp

#r "nuget: Dapper.FSharp, 4.4"
#r "nuget: Npgsql, 7.0.2"

#!fsharp

let parsePostgresConnString (connString: string) =
    let uri = Uri(connString)

    let userInfo =
        uri.UserInfo.Split(':')
        |> Array.map (fun x -> System.Web.HttpUtility.UrlDecode(x))

    let host = uri.Host
    let port = uri.Port
    let dbName = uri.AbsolutePath.Substring(1)

    $"Host={host};Port={port};Username={userInfo.[0]};Password={userInfo.[1]};Database={dbName}"

#!fsharp

parsePostgresConnString "postgres://swuecho:VwbE1sYP9OgH@ep-fragrant-sound-219991-pooler.us-west-2.aws.neon.tech/neondb"

#!fsharp

parsePostgresConnString "postgres://swuecho:VwbE1sYP9OgH@ep-fragrant-sound-219991.us-west-2.aws.neon.tech/neondb"

#!fsharp

open Dapper.FSharp
open Dapper.FSharp.PostgreSQL
open System.Threading.Tasks

#!fsharp

type Daily =
        { 
            ts_code: string
            trade_date: string
            ``open``: float32
            high: float32
            close: float32
            pre_close: float32
            change: float32
            pct_change: float32
            vol: float32
            amount: float32
        }

#!fsharp

open Npgsql

#!fsharp

let conn: NpgsqlConnection =
        new NpgsqlConnection("Host=192.168.0.135;Port=5432;Username=hwu;Password=using555;Database=stock")

#!fsharp

let taskToList (t: Task<seq<'a>>) =
        t
        |> Async.AwaitTask
        |> Async.RunSynchronously
        |> Seq.toList

#!fsharp

let daily_table = table'<Daily> "daily"

#!fsharp

let query_list (conn: NpgsqlConnection) (table: QuerySource<Daily>) (offset: int) (limit: int) : Daily list =
        select {
            for w in table do
            where (w.ts_code = "600871.SH")
            skipTake offset limit 
        }
        |> conn.SelectAsync<Daily>
        |> taskToList

#!fsharp

query_list conn daily_table 20 101
